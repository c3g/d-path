{"ast":null,"code":"var _jsxFileName = \"/Users/sballesteros/Documents/D-path/src/forms/UserInfo.js\";\nimport React, { Component } from 'react';\nimport { Form, ButtonGroup, Button, Popover, OverlayTrigger } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { processor, recipient, donor } from '../utils/Popovers';\nimport { USER_TYPE } from '../constants';\n\nclass UserInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveAndContinue = type => {\n      this.props.nextStep();\n      this.props.handleUserChange(type);\n    };\n\n    this.back = e => {\n      e.preventDefault();\n      this.props.prevStep();\n    };\n\n    this.createUser = user => {\n      return {\n        type: user,\n        known: true\n      };\n    };\n  }\n\n  render() {\n    const {\n      values\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        paddingBottom: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \" What type of user are you? \"), /*#__PURE__*/React.createElement(ButtonGroup, {\n      className: \"userButtons\",\n      style: {\n        width: '60%'\n      },\n      size: \"lg\",\n      vertical: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n      trigger: \"hover\",\n      placement: \"right\",\n      overlay: processor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      className: \"text-left\",\n      onClick: () => this.saveAndContinue(USER_TYPE.PROCESSOR),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Processor of data\")), /*#__PURE__*/React.createElement(OverlayTrigger, {\n      trigger: \"hover\",\n      placement: \"right\",\n      overlay: recipient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      className: \"text-left\",\n      onClick: () => this.saveAndContinue(USER_TYPE.RECIPIENT),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"Data recipient\")), /*#__PURE__*/React.createElement(OverlayTrigger, {\n      trigger: \"hover\",\n      placement: \"right\",\n      overlay: donor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      className: \"text-left\",\n      onClick: () => this.saveAndContinue(USER_TYPE.DONOR),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Data donor\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: '3%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \" Restart  \"))));\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/sballesteros/Documents/D-path/src/forms/UserInfo.js"],"names":["React","Component","Form","ButtonGroup","Button","Popover","OverlayTrigger","Link","processor","recipient","donor","USER_TYPE","UserInfo","constructor","props","saveAndContinue","type","nextStep","handleUserChange","back","e","preventDefault","prevStep","createUser","user","known","render","values","paddingBottom","width","PROCESSOR","RECIPIENT","DONOR","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, ButtonGroup, Button, Popover, OverlayTrigger } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { processor, recipient, donor } from '../utils/Popovers';\n\nimport { USER_TYPE } from '../constants';\n\nclass UserInfo extends Component{\n\n  constructor(props) {\n   super(props);\n  }\n\n    saveAndContinue = (type) => {\n        this.props.nextStep();\n        this.props.handleUserChange(type);\n    }\n\n    back  = (e) => {\n      e.preventDefault();\n      this.props.prevStep();\n    }\n\n    createUser = (user) => {\n      return ({\n        type : user,\n        known: true,\n      });\n    }\n\n    render(){\n        const { values } = this.props;\n        return(\n          <div>\n            <h1 style={{paddingBottom: '2%'}}> What type of user are you? </h1>\n            <ButtonGroup className='userButtons' style={{width:'60%'}} size=\"lg\" vertical>\n              <OverlayTrigger trigger='hover' placement=\"right\" overlay={processor}>\n                <Button variant='light' className='text-left' onClick={() => this.saveAndContinue(USER_TYPE.PROCESSOR)}>Processor of data</Button>\n               </OverlayTrigger>\n               <OverlayTrigger trigger='hover' placement='right' overlay={recipient}>\n                <Button variant='light' className='text-left' onClick={() => this.saveAndContinue(USER_TYPE.RECIPIENT)}>Data recipient</Button>\n               </OverlayTrigger>\n              <OverlayTrigger trigger='hover' placement='right' overlay={donor}>\n                <Button variant='light' className='text-left' onClick={() => this.saveAndContinue(USER_TYPE.DONOR)}>Data donor</Button>\n              </OverlayTrigger>\n            </ButtonGroup>\n            <div style={{paddingTop: '3%'}}>\n              <Link to='/'>\n                <Button variant='danger'> Restart  </Button>\n              </Link>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}