{"ast":null,"code":"var _jsxFileName = \"/Users/sballesteros/Documents/D-path/src/forms/MainForm.js\";\nimport React, { Component } from 'react';\nimport { Container, Jumbotron } from 'react-bootstrap';\nimport OrganizationForm from './OrganizationForm';\nimport DataProcessingForm from './DataProcessingForm';\nimport DataUsersForm from './DataUsersForm';\nimport DataDonorsForm from './DataDonorsForm';\nimport Success from './Success';\nimport InfoTable from './InfoTable';\nimport CanadaFlow from './CanadaFlow';\n\nclass MainForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.nextStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.handleChange = input => {\n      var data = this.state.data;\n      console.log(data);\n\n      for (var i in data) {\n        if (data[i].type == input.type) {\n          data[i] = {\n            type: input.type,\n            location: input.location,\n            isPerfonalInfo: input.isPerfonalInfo\n          };\n          this.setState({\n            data: data\n          });\n        }\n      }\n    };\n\n    this.getLocationComponent = () => {\n      const {\n        step\n      } = this.state;\n\n      switch (step) {\n        case 1:\n          return OrganizationForm;\n          break;\n\n        case 2:\n          return DataProcessingForm;\n          break;\n\n        case 3:\n          return DataUsersForm;\n          break;\n\n        case 4:\n          return DataDonorsForm;\n          break;\n\n        case 5:\n          return Success;\n          break;\n      }\n    };\n\n    this.getInformationComponent = () => {\n      const {\n        currentLocation\n      } = this.state;\n\n      switch (currentLocation) {\n        case 'Canada':\n          return CanadaFlow;\n          break;\n\n        case 'Europe':\n          return CanadaFlow;\n          break;\n\n        case 'United States':\n          return CanadaFlow;\n          break;\n      }\n    };\n\n    this.state = {\n      step: 1,\n      isLocationKnown: false,\n      currentLocation: null,\n      data: [{\n        type: 'organization',\n        location: '',\n        isPerfonalInfo: null\n      }, {\n        type: 'dataProcessed',\n        location: '',\n        isPerfonalInfo: null\n      }, {\n        type: 'dataUsers',\n        location: '',\n        isPerfonalInfo: null\n      }, {\n        type: 'dataDonors',\n        location: '',\n        isPerfonalInfo: null\n      }]\n    };\n  }\n\n  render() {\n    const {\n      step,\n      isLocationKnown,\n      data\n    } = this.state;\n    const Component = isLocationKnown ? this.getInformationComponent() : this.getLocationComponent();\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Component, {\n      nextStep: this.nextStep,\n      prevStep: this.prevStep,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(InfoTable, {\n      values: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default MainForm;","map":{"version":3,"sources":["/Users/sballesteros/Documents/D-path/src/forms/MainForm.js"],"names":["React","Component","Container","Jumbotron","OrganizationForm","DataProcessingForm","DataUsersForm","DataDonorsForm","Success","InfoTable","CanadaFlow","MainForm","constructor","props","nextStep","step","state","setState","prevStep","handleChange","input","data","console","log","i","type","location","isPerfonalInfo","getLocationComponent","getInformationComponent","currentLocation","isLocationKnown","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Container, Jumbotron} from 'react-bootstrap';\n\nimport OrganizationForm from './OrganizationForm';\nimport DataProcessingForm from './DataProcessingForm';\nimport DataUsersForm from './DataUsersForm';\nimport DataDonorsForm from './DataDonorsForm';\nimport Success from './Success';\nimport InfoTable from './InfoTable';\nimport CanadaFlow from './CanadaFlow';\n\nclass MainForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            step: 1,\n            isLocationKnown: false,\n            currentLocation: null,\n            data: [\n              { type: 'organization',\n                location: '',\n                isPerfonalInfo: null\n               },\n              { type: 'dataProcessed',\n                location: '',\n                isPerfonalInfo: null\n              },\n              { type: 'dataUsers',\n                location: '',\n                isPerfonalInfo: null\n              },\n              {\n                type: 'dataDonors',\n                location: '',\n                isPerfonalInfo: null\n              },\n            ]\n        }\n    }\n\n    nextStep = () => {\n        const { step } = this.state;\n        this.setState({\n            step : step + 1\n        })\n    }\n\n    prevStep = () => {\n        const { step } = this.state;\n        this.setState({\n            step : step - 1\n        })\n    }\n\n    handleChange = (input) => {\n      var data = this.state.data;\n      console.log(data);\n      for (var i in data) {\n         if (data[i].type == input.type) {\n           data[i] = {\n                type:input.type,\n                location: input.location,\n                isPerfonalInfo:input.isPerfonalInfo,\n            }\n            this.setState({ data : data});\n         }\n      }\n    }\n\n    getLocationComponent = () => {\n      const { step } = this.state;\n      switch(step) {\n      case 1:\n          return OrganizationForm;\n          break;\n      case 2:\n          return DataProcessingForm;\n          break;\n      case 3:\n          return DataUsersForm;\n          break;\n      case 4:\n          return DataDonorsForm;\n          break;\n      case 5:\n          return Success;\n          break;\n      }\n    }\n\n    getInformationComponent = () => {\n      const { currentLocation } = this.state;\n      switch(currentLocation) {\n      case 'Canada':\n          return CanadaFlow;\n          break;\n      case 'Europe':\n          return CanadaFlow;\n          break;\n      case 'United States':\n          return CanadaFlow;\n          break;\n      }\n    }\n\n    render(){\n        const {step, isLocationKnown, data} = this.state;\n        const Component = isLocationKnown ? this.getInformationComponent() : this.getLocationComponent();\n        return(\n        <Container>\n          <div>\n            <Jumbotron>\n              <Component\n                nextStep={this.nextStep}\n                prevStep={this.prevStep}\n                handleChange = {this.handleChange}\n              />\n            </Jumbotron>\n            <InfoTable values={data}/>\n          </div>\n        </Container>)\n    }\n}\n\nexport default MainForm;\n"]},"metadata":{},"sourceType":"module"}