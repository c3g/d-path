{"ast":null,"code":"var _jsxFileName = \"/Users/sballesteros/Documents/D-path/src/Info.js\";\nimport React, { Component } from 'react';\nimport { Container, Jumbotron, Button, Card, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { PDFDownloadLink, Document, Page, Text, Font } from '@react-pdf/renderer';\nimport { styles } from './utils/PDFStyles';\nimport { getLawsPDF, getBestPracticesPDF } from './utils/PDFUtils';\nimport { getLaws, getBestPractices, getLawCards, getBestPracticesCards } from './utils/ObligationsUtils';\n\nclass Info extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveInformation = (e, value) => {\n      e.preventDefault();\n      this.props.handleChange(value);\n    };\n\n    this.createDocument = () => {\n      const {\n        locations,\n        isPersonalInfo\n      } = this.props; // Create styles\n\n      Font.register({\n        family: 'Oswald',\n        src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf'\n      });\n      return /*#__PURE__*/React.createElement(Document, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Page, {\n        style: styles.body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        style: styles.header,\n        fixed: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, \"~ D-Path Tool ~\"), /*#__PURE__*/React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, \"OBLIGATIONS AND REQUIREMENTS\"), /*#__PURE__*/React.createElement(Text, {\n        style: styles.author,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, \"Epishare\"), isPersonalInfo ? getLawsPDF(locations) : null, getBestPracticesPDF(), /*#__PURE__*/React.createElement(Text, {\n        style: styles.pageNumber,\n        render: ({\n          pageNumber,\n          totalPages\n        }) => `${pageNumber} / ${totalPages}`,\n        fixed: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      })));\n    };\n  }\n\n  render() {\n    const {\n      locations,\n      isPersonalInfo\n    } = this.props;\n\n    const MyDoc = () => this.createDocument();\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \" Obligations and requirements \"), isPersonalInfo ? getLawCards() : null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \" \", isPersonalInfo ? getLaws(locations) : null, \" \"), getBestPracticesCards(), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \" \", getBestPractices(), \" \"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }\n    }, \" Restart  \")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PDFDownloadLink, {\n      document: /*#__PURE__*/React.createElement(MyDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 49\n        }\n      }),\n      fileName: \"ObligationsAndRequirements.pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }\n    }, \" Download PDF  \"))))));\n  }\n\n}\n\nexport default Info;","map":{"version":3,"sources":["/Users/sballesteros/Documents/D-path/src/Info.js"],"names":["React","Component","Container","Jumbotron","Button","Card","Row","Col","Link","PDFDownloadLink","Document","Page","Text","Font","styles","getLawsPDF","getBestPracticesPDF","getLaws","getBestPractices","getLawCards","getBestPracticesCards","Info","constructor","props","saveInformation","e","value","preventDefault","handleChange","createDocument","locations","isPersonalInfo","register","family","src","body","header","title","author","pageNumber","totalPages","render","MyDoc","paddingTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,SAAR,EAAmBC,SAAnB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4CC,GAA5C,EAAiDC,GAAjD,QAA2D,iBAA3D;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,IAApC,EAA0CC,IAA1C,EAAgDC,IAAhD,QAA2D,qBAA3D;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAAQC,UAAR,EAAoBC,mBAApB,QAA+C,kBAA/C;AACA,SAAQC,OAAR,EAAiBC,gBAAjB,EAAmCC,WAAnC,EAAgDC,qBAAhD,QAA4E,0BAA5E;;AAEA,MAAMC,IAAN,SAAmBpB,SAAnB,CAA6B;AAEzBqB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAInBC,eAJmB,GAID,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC5BD,MAAAA,CAAC,CAACE,cAAF;AACA,WAAKJ,KAAL,CAAWK,YAAX,CAAwBF,KAAxB;AACH,KAPkB;;AAAA,SASnBG,cATmB,GASF,MAAM;AACrB,YAAM;AAACC,QAAAA,SAAD;AAAYC,QAAAA;AAAZ,UAA8B,KAAKR,KAAzC,CADqB,CAGrB;;AACAV,MAAAA,IAAI,CAACmB,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE,QADI;AAEZC,QAAAA,GAAG,EAAE;AAFO,OAAd;AAKA,0BACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEpB,MAAM,CAACqB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAErB,MAAM,CAACsB,MAApB;AAA4B,QAAA,KAAK,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEtB,MAAM,CAACuB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJF,eAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEvB,MAAM,CAACwB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EAMOP,cAAD,GAAmBhB,UAAU,CAACe,SAAD,CAA7B,GAA2C,IANjD,EAOMd,mBAAmB,EAPzB,eAQE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACyB,UAApB;AAAgC,QAAA,MAAM,EAAE,CAAC;AAAEA,UAAAA,UAAF;AAAcC,UAAAA;AAAd,SAAD,KACrC,GAAED,UAAW,MAAKC,UAAW,EADhC;AAEG,QAAA,KAAK,MAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADA,CADF;AAeD,KAjCkB;AAElB;;AAiCDC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACX,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAA8B,KAAKR,KAAzC;;AACA,UAAMmB,KAAK,GAAG,MAAM,KAAKb,cAAL,EAApB;;AACA,wBACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAEME,cAAc,GAAGZ,WAAW,EAAd,GAAmB,IAFvC,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMY,cAAc,GAAGd,OAAO,CAACa,SAAD,CAAV,GAAwB,IAA5C,MAHJ,EAIMV,qBAAqB,EAJ3B,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMF,gBAAgB,EAAtB,MALJ,eAMQ,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CANR,eASQ;AAAK,MAAA,KAAK,EAAE;AAACyB,QAAAA,UAAU,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,eAAD;AAAiB,MAAA,QAAQ,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B;AAAsC,MAAA,QAAQ,EAAC,gCAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,CADD,CATR,CADF,CADF,CADA;AAoBH;;AA5DwB;;AA+D7B,eAAetB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Container, Jumbotron, Button, Card, Row, Col} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport { PDFDownloadLink, Document, Page, Text, Font} from '@react-pdf/renderer'\nimport {styles} from './utils/PDFStyles';\nimport {getLawsPDF, getBestPracticesPDF } from './utils/PDFUtils';\nimport {getLaws, getBestPractices, getLawCards, getBestPracticesCards} from './utils/ObligationsUtils';\n\nclass Info extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    saveInformation = (e, value) => {\n        e.preventDefault();\n        this.props.handleChange(value);\n    }\n\n    createDocument = () => {\n      const {locations, isPersonalInfo} = this.props;\n\n      // Create styles\n      Font.register({\n        family: 'Oswald',\n        src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf'\n      });\n\n      return (\n        <Document>\n        <Page style={styles.body}>\n          <Text style={styles.header} fixed>\n            ~ D-Path Tool ~\n          </Text>\n          <Text style={styles.title}>OBLIGATIONS AND REQUIREMENTS</Text>\n          <Text style={styles.author}>Epishare</Text>\n            { (isPersonalInfo) ? getLawsPDF(locations) : null }\n            { getBestPracticesPDF() }\n          <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n            `${pageNumber} / ${totalPages}`\n          )} fixed />\n        </Page>\n        </Document>)\n    }\n\n    render(){\n        const {locations, isPersonalInfo} = this.props;\n        const MyDoc = () => this.createDocument();\n        return(\n        <Container>\n          <div>\n            <Jumbotron>\n              <h1> Obligations and requirements </h1>\n                { isPersonalInfo ? getLawCards() : null }\n                <p> { isPersonalInfo ? getLaws(locations) : null } </p>\n                { getBestPracticesCards() }\n                <p> { getBestPractices() } </p>\n                    <Link to=\"/\">\n                      <Button variant=\"danger\"> Restart  </Button>\n                    </Link>\n                    <div style={{paddingTop: '1%'}}>\n                     <PDFDownloadLink document={<MyDoc />} fileName=\"ObligationsAndRequirements.pdf\">\n                      <Button variant=\"info\"> Download PDF  </Button>\n                     </PDFDownloadLink>\n                   </div>\n            </Jumbotron>\n          </div>\n        </Container>)\n    }\n}\n\nexport default Info;\n"]},"metadata":{},"sourceType":"module"}