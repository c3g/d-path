{"ast":null,"code":"var _jsxFileName = \"/Users/sballesteros/Documents/D-path/src/Info.js\";\nimport React, { Component } from 'react';\nimport { Container, Jumbotron, Button, Card, ListGroup, Tabs, Tab } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { PDFDownloadLink, Document, Page, View, Text, StyleSheet } from '@react-pdf/renderer';\n\nclass Info extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveInformation = (e, value) => {\n      e.preventDefault();\n      this.props.handleChange(value);\n    };\n\n    this.createDocument = () => {\n      const {\n        locations,\n        isPersonalInfo\n      } = this.props; // Create styles\n\n      const styles = StyleSheet.create({\n        page: {\n          flexDirection: 'row',\n          backgroundColor: '#E4E4E4'\n        },\n        section: {\n          margin: 10,\n          padding: 10,\n          flexGrow: 1\n        }\n      });\n      return /*#__PURE__*/React.createElement(Document, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Page, {\n        size: \"A4\",\n        style: styles.page,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(View, {\n        style: styles.section,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, locations.map(item => {\n        return /*#__PURE__*/React.createElement(Text, {\n          style: {\n            paddingTop: '1%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }\n        }, item);\n      })), /*#__PURE__*/React.createElement(View, {\n        style: styles.section,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, \" Personal Info: \", isPersonalInfo ? 'True' : 'False', \" \"))));\n    };\n\n    this.getBestPractices = () => {\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, \"Best Practices\"), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tabs, {\n        defaultActiveKey: \"accountability\",\n        id: \"uncontrolled-tab-example\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Tab, {\n        eventKey: \"accountability\",\n        title: \"Accountability\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          paddingTop: '1%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        variant: \"flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }, \"Appoint a security officer responsible for implementing and enforcing security policies/practice, monitoring compliance with security policies through standards, audits and reviews.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, \"Where relevant, the data steward should maintain communications with the relevant research ethics committees, data access committees, etc.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, \"Data stewards should track changes in relevant laws, regulations, policies, expectations, and best practices and appropriately respond to them with communication and adjustments.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, \"Procedure to utilize the complaints/inquires process should be easily accessible and simple to use. Consequences for data breaches should be clearly outlined and enforced.\")))), /*#__PURE__*/React.createElement(Tab, {\n        eventKey: \"law\",\n        title: \"Lawfulness of Use, Storage, Transfer and Protection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          paddingTop: '1%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        variant: \"flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }\n      }, \"Policies and practices regarding privacy and security should be publicly available with plain language summaries. For data subjects/ producers/hosts, general information on their data usage should be available. For data that is not anonymized, a procedure to provide data producers/subjects/hosts with additional information on how their data re being used should exist.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 16\n        }\n      }, \"Policies should also address means to prevent indirect identity leaks through for e.g. metadata, URLs, and message headers. Assessments of data privacy risks should be conducted. These assessments should address various aspects of disclosure risks such as discrimination, profiling, reputation risks, etc.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }\n      }, \"Develop restoration mechanisms in case of a physical or technical incident.\")))), /*#__PURE__*/React.createElement(Tab, {\n        eventKey: \"security\",\n        title: \"Security and Safeguards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          paddingTop: '1%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        variant: \"flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, \"Have a process for testing, monitoring and evaluating those measures. Additionally, mechanism to maximize the likelihood of detecting data breaches should be in place. Whenever possible, technical measures, such as pseudonymization, should occur at the earliest oissubke opportunity.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, \"Any changes relating to security should be reviewed for privacy and security impacts prior to implementation. Technical measures should have third party audit certifications.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, \"Data should only be disclosed in situations where 1) Consent has been provided or 2) When there is a legal and appropriate need for disclosure. 3) Data subjects have knowingly made their own identifiable data public.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, \"Data sustainability is encouraged, where in accordance with the data subject's consent and the relevant laws, data should be retained for future processing through archiving, indexing, and retrieval systems.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, \"Data breaches should be reported to the organization's data steward without undue delay. Additionally, they should be reported to the competent supervisory authority, data protection officer and relevant research ethics committee.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, \"Additional mechanisms should be considered to address cases of compelled disclosure by state authorities.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, \"Requests for data should be able to demonstrate at least: 1) Legitimate purpose/interest/Use. 2) Authorized accessibility to specific individuals. 3) Reasonable and specific time period of data access. 4) Destruction of data after use.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, \"Organizations shall schedule internal and external security processes independently audited. Organizations should record and audit log of all security-related events. Where possible, audits and their documentations should be automated. Audit logs should be retained for at least a year or as specified by law.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, \"Organizations shall schedule internal and external security processes independently audited. orhanizations should also record and audit log of all security-related events. Where possible, audits and their documentation shoudl be automated. Audit logs should be retained for at least a year or as specified by law.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }, \"Audits/Assessments should also assess data integrity and quality. Specifically, if data processing involves a vulnerable population. If practical, the organization should consider a vulnerable population- specific privacy impact assessment.\")))))));\n    };\n\n    this.getCanadiandLaws = () => {\n      return /*#__PURE__*/React.createElement(Tabs, {\n        defaultActiveKey: \"accountability\",\n        id: \"uncontrolled-tab-example\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Tab, {\n        eventKey: \"accountability\",\n        title: \"Accountability\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          paddingTop: '1%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        variant: \"flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 12\n        }\n      }, \"Appoint a security officer responsible for implementing and enforcing security policies/practice, monitoring compliance with security policies through standards, audits and reviews.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 12\n        }\n      }, \"Where relevant, the data steward should maintain communications with the relevant research ethics committees, data access committees, etc.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 12\n        }\n      }, \"Data stewards should track changes in relevant laws, regulations, policies, expectations, and best practices and appropriately respond to them with communication and adjustments.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 12\n        }\n      }, \"Procedure to utilize the complaints/inquires process should be easily accessible and simple to use. Consequences for data breaches should be clearly outlined and enforced.\")))), /*#__PURE__*/React.createElement(Tab, {\n        eventKey: \"law\",\n        title: \"Lawfulness of Use, Storage, Transfer and Protection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          paddingTop: '1%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        variant: \"flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }, \"Policies and practices regarding privacy and security should be publicly available with plain language summaries. For data subjects/ producers/hosts, general information on their data usage should be available. For data that is not anonymized, a procedure to provide data producers/subjects/hosts with additional information on how their data re being used should exist.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }\n      }, \"Policies should also address means to prevent indirect identity leaks through for e.g. metadata, URLs, and message headers. Assessments of data privacy risks should be conducted. These assessments should address various aspects of disclosure risks such as discrimination, profiling, reputation risks, etc.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }\n      }, \"Develop restoration mechanisms in case of a physical or technical incident.\")))), /*#__PURE__*/React.createElement(Tab, {\n        eventKey: \"security\",\n        title: \"Security and Safeguards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          paddingTop: '1%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        variant: \"flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 14\n        }\n      }, \"Have a process for testing, monitoring and evaluating those measures. Additionally, mechanism to maximize the likelihood of detecting data breaches should be in place. Whenever possible, technical measures, such as pseudonymization, should occur at the earliest oissubke opportunity.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 14\n        }\n      }, \"Any changes relating to security should be reviewed for privacy and security impacts prior to implementation. Technical measures should have third party audit certifications.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 14\n        }\n      }, \"Data should only be disclosed in situations where 1) Consent has been provided or 2) When there is a legal and appropriate need for disclosure. 3) Data subjects have knowingly made their own identifiable data public.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 14\n        }\n      }, \"Data sustainability is encouraged, where in accordance with the data subject's consent and the relevant laws, data should be retained for future processing through archiving, indexing, and retrieval systems.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 14\n        }\n      }, \"Data breaches should be reported to the organization's data steward without undue delay. Additionally, they should be reported to the competent supervisory authority, data protection officer and relevant research ethics committee.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 14\n        }\n      }, \"Additional mechanisms should be considered to address cases of compelled disclosure by state authorities.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 14\n        }\n      }, \"Requests for data should be able to demonstrate at least: 1) Legitimate purpose/interest/Use. 2) Authorized accessibility to specific individuals. 3) Reasonable and specific time period of data access. 4) Destruction of data after use.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 14\n        }\n      }, \"Organizations shall schedule internal and external security processes independently audited. Organizations should record and audit log of all security-related events. Where possible, audits and their documentations should be automated. Audit logs should be retained for at least a year or as specified by law.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 14\n        }\n      }, \"Organizations shall schedule internal and external security processes independently audited. orhanizations should also record and audit log of all security-related events. Where possible, audits and their documentation shoudl be automated. Audit logs should be retained for at least a year or as specified by law.\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 14\n        }\n      }, \"Audits/Assessments should also assess data integrity and quality. Specifically, if data processing involves a vulnerable population. If practical, the organization should consider a vulnerable population- specific privacy impact assessment.\")))));\n    };\n\n    this.getLaws = () => {\n      const {\n        locations\n      } = this.props;\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 9\n        }\n      }, \"Laws and Policies \"), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 9\n        }\n      }, locations.include('Canada') ? this.getCanadiandLaws() : null), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 9\n        }\n      }, locations.include('Europe') ? 'Please refer to the Obligations and Requirements of the GDPR' : null), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 9\n        }\n      }, locations.include('United States') ? 'Please refer to the US Legislation (HIPAA)' : null));\n    };\n  }\n\n  render() {\n    const {\n      locations,\n      isPersonalInfo\n    } = this.props;\n    const styles = StyleSheet.create({\n      page: {\n        flexDirection: 'row',\n        backgroundColor: '#E4E4E4'\n      },\n      section: {\n        margin: 10,\n        padding: 10,\n        flexGrow: 1\n      }\n    });\n\n    const MyDoc = () => this.createDocument();\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }\n    }, \" Obligations and requirements \"), locations.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          paddingTop: '1%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }\n      }, \" \", item, \" \"));\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }, \" \", this.getBestPractices(), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }, \" \", isPersonalInfo ? this.getLaws() : null, \" \"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 23\n      }\n    }, \" Restart  \")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PDFDownloadLink, {\n      document: /*#__PURE__*/React.createElement(MyDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 49\n        }\n      }),\n      fileName: \"ObligationsAndRequirements.pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 23\n      }\n    }, \" Download PDF  \")))))));\n  }\n\n}\n\nexport default Info;","map":{"version":3,"sources":["/Users/sballesteros/Documents/D-path/src/Info.js"],"names":["React","Component","Container","Jumbotron","Button","Card","ListGroup","Tabs","Tab","Link","PDFDownloadLink","Document","Page","View","Text","StyleSheet","Info","constructor","props","saveInformation","e","value","preventDefault","handleChange","createDocument","locations","isPersonalInfo","styles","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","map","item","paddingTop","getBestPractices","getCanadiandLaws","getLaws","include","render","MyDoc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Container, Jumbotron, Button, Card, ListGroup, Tabs, Tab} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport { PDFDownloadLink, Document, Page, View, Text, StyleSheet} from '@react-pdf/renderer'\n\nclass Info extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    saveInformation = (e, value) => {\n        e.preventDefault();\n        this.props.handleChange(value);\n    }\n\n    createDocument = () => {\n      const {locations, isPersonalInfo} = this.props;\n      // Create styles\n       const styles = StyleSheet.create({\n         page: {\n           flexDirection: 'row',\n           backgroundColor: '#E4E4E4'\n         },\n         section: {\n           margin: 10,\n           padding: 10,\n           flexGrow: 1\n         }\n       });\n\n      return (\n        <Document>\n          <Page size=\"A4\" style={styles.page}>\n            <View style={styles.section}>\n            {locations.map(( item ) => {\n                return (\n                  <Text style={{paddingTop: '1%'}}>\n                    {item}\n                  </Text>\n                );\n              })}\n            </View>\n            <View style={styles.section}>\n              <Text> Personal Info: {isPersonalInfo ? 'True' : 'False'} </Text>\n            </View>\n          </Page>\n        </Document>)\n    }\n\n    getBestPractices = () => {\n      return(<Card>\n        <Card.Header as=\"h5\">Best Practices</Card.Header>\n        <Card.Body>\n         <Tabs defaultActiveKey=\"accountability\" id=\"uncontrolled-tab-example\">\n         <Tab eventKey=\"accountability\" title=\"Accountability\">\n          <Card.Text style={{ paddingTop: '1%'}}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n              Appoint a security officer responsible for\n              implementing and enforcing security policies/practice, monitoring\n              compliance with security policies through standards, audits and reviews.\n              </ListGroup.Item>\n              <ListGroup.Item>\n               Where relevant, the data steward should maintain communications\n               with the relevant research ethics committees, data access committees, etc.\n              </ListGroup.Item>\n              <ListGroup.Item>\n               Data stewards should track changes in relevant laws, regulations, policies,\n               expectations, and best practices and appropriately respond to them with communication\n               and adjustments.\n              </ListGroup.Item>\n              <ListGroup.Item>\n               Procedure to utilize the complaints/inquires process should be easily accessible\n               and simple to use. Consequences for data breaches should be clearly outlined and enforced.\n              </ListGroup.Item>\n            </ListGroup>\n           </Card.Text>\n          </Tab>\n          <Tab eventKey=\"law\" title=\"Lawfulness of Use, Storage, Transfer and Protection\">\n           <Card.Text style={{ paddingTop: '1%'}}>\n             <ListGroup variant=\"flush\">\n               <ListGroup.Item>\n               Policies and practices regarding privacy and security should be\n               publicly available with plain language summaries. For data subjects/\n               producers/hosts, general information on their data usage should\n               be available. For data that is not anonymized, a procedure to provide\n               data producers/subjects/hosts with additional information on how their\n               data re being used should exist.\n               </ListGroup.Item>\n               <ListGroup.Item>\n                Policies should also address means to prevent indirect identity leaks through for e.g.\n                metadata, URLs, and message headers. Assessments of data privacy risks should be\n                conducted. These assessments should address various aspects of disclosure risks such as\n                discrimination, profiling, reputation risks, etc.\n               </ListGroup.Item>\n               <ListGroup.Item>\n                Develop restoration mechanisms in case of a physical or technical incident.\n               </ListGroup.Item>\n             </ListGroup>\n            </Card.Text>\n           </Tab>\n           <Tab eventKey=\"security\" title=\"Security and Safeguards\">\n            <Card.Text style={{ paddingTop: '1%'}}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                Have a process for testing, monitoring and evaluating those measures.\n                Additionally, mechanism to maximize the likelihood of detecting data breaches\n                should be in place. Whenever possible, technical measures, such as pseudonymization,\n                should occur at the earliest oissubke opportunity.\n                </ListGroup.Item>\n                <ListGroup.Item>\n                 Any changes relating to security should be reviewed for privacy and security impacts\n                 prior to implementation. Technical measures should have third party\n                 audit certifications.\n                </ListGroup.Item>\n                <ListGroup.Item>\n                 Data should only be disclosed in situations where 1) Consent has been provided\n                 or 2) When there is a legal and appropriate need for disclosure.\n                 3) Data subjects have knowingly made their own identifiable data public.\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  Data sustainability is encouraged, where in accordance with the data subject's\n                  consent and the relevant laws, data should be retained for future\n                  processing through archiving, indexing, and retrieval systems.\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  Data breaches should be reported to the organization's data steward without undue delay.\n                  Additionally, they should be reported to the competent supervisory authority, data\n                  protection officer and relevant research ethics committee.\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  Additional mechanisms should be considered to address cases of compelled disclosure\n                  by state authorities.\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  Requests for data should be able to demonstrate at least:\n                    1) Legitimate purpose/interest/Use.\n                    2) Authorized accessibility to specific individuals.\n                    3) Reasonable and specific time period of data access.\n                    4) Destruction of data after use.\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  Organizations shall schedule internal and external security\n                  processes independently audited. Organizations should record and audit\n                  log of all security-related events. Where possible, audits and their documentations\n                  should be automated. Audit logs should be retained for at least a year\n                  or as specified by law.\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  Organizations shall schedule internal and external security processes\n                  independently audited. orhanizations should also record and audit log of\n                  all security-related events. Where possible, audits and their documentation shoudl\n                  be automated. Audit logs should be retained for at least a year or as\n                  specified by law.\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  Audits/Assessments should also assess data integrity and quality.\n                  Specifically, if data processing involves a vulnerable population.\n                  If practical, the organization should consider a vulnerable population-\n                  specific privacy impact assessment.\n                </ListGroup.Item>\n              </ListGroup>\n             </Card.Text>\n            </Tab>\n         </Tabs >\n        </Card.Body>\n      </Card>);\n    }\n\n    getCanadiandLaws = () => {\n      return(\n      <Tabs defaultActiveKey=\"accountability\" id=\"uncontrolled-tab-example\">\n      <Tab eventKey=\"accountability\" title=\"Accountability\">\n       <Card.Text style={{ paddingTop: '1%'}}>\n         <ListGroup variant=\"flush\">\n           <ListGroup.Item>\n           Appoint a security officer responsible for\n           implementing and enforcing security policies/practice, monitoring\n           compliance with security policies through standards, audits and reviews.\n           </ListGroup.Item>\n           <ListGroup.Item>\n            Where relevant, the data steward should maintain communications\n            with the relevant research ethics committees, data access committees, etc.\n           </ListGroup.Item>\n           <ListGroup.Item>\n            Data stewards should track changes in relevant laws, regulations, policies,\n            expectations, and best practices and appropriately respond to them with communication\n            and adjustments.\n           </ListGroup.Item>\n           <ListGroup.Item>\n            Procedure to utilize the complaints/inquires process should be easily accessible\n            and simple to use. Consequences for data breaches should be clearly outlined and enforced.\n           </ListGroup.Item>\n         </ListGroup>\n        </Card.Text>\n       </Tab>\n       <Tab eventKey=\"law\" title=\"Lawfulness of Use, Storage, Transfer and Protection\">\n        <Card.Text style={{ paddingTop: '1%'}}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n            Policies and practices regarding privacy and security should be\n            publicly available with plain language summaries. For data subjects/\n            producers/hosts, general information on their data usage should\n            be available. For data that is not anonymized, a procedure to provide\n            data producers/subjects/hosts with additional information on how their\n            data re being used should exist.\n            </ListGroup.Item>\n            <ListGroup.Item>\n             Policies should also address means to prevent indirect identity leaks through for e.g.\n             metadata, URLs, and message headers. Assessments of data privacy risks should be\n             conducted. These assessments should address various aspects of disclosure risks such as\n             discrimination, profiling, reputation risks, etc.\n            </ListGroup.Item>\n            <ListGroup.Item>\n             Develop restoration mechanisms in case of a physical or technical incident.\n            </ListGroup.Item>\n          </ListGroup>\n         </Card.Text>\n        </Tab>\n        <Tab eventKey=\"security\" title=\"Security and Safeguards\">\n         <Card.Text style={{ paddingTop: '1%'}}>\n           <ListGroup variant=\"flush\">\n             <ListGroup.Item>\n             Have a process for testing, monitoring and evaluating those measures.\n             Additionally, mechanism to maximize the likelihood of detecting data breaches\n             should be in place. Whenever possible, technical measures, such as pseudonymization,\n             should occur at the earliest oissubke opportunity.\n             </ListGroup.Item>\n             <ListGroup.Item>\n              Any changes relating to security should be reviewed for privacy and security impacts\n              prior to implementation. Technical measures should have third party\n              audit certifications.\n             </ListGroup.Item>\n             <ListGroup.Item>\n              Data should only be disclosed in situations where 1) Consent has been provided\n              or 2) When there is a legal and appropriate need for disclosure.\n              3) Data subjects have knowingly made their own identifiable data public.\n             </ListGroup.Item>\n             <ListGroup.Item>\n               Data sustainability is encouraged, where in accordance with the data subject's\n               consent and the relevant laws, data should be retained for future\n               processing through archiving, indexing, and retrieval systems.\n             </ListGroup.Item>\n             <ListGroup.Item>\n               Data breaches should be reported to the organization's data steward without undue delay.\n               Additionally, they should be reported to the competent supervisory authority, data\n               protection officer and relevant research ethics committee.\n             </ListGroup.Item>\n             <ListGroup.Item>\n               Additional mechanisms should be considered to address cases of compelled disclosure\n               by state authorities.\n             </ListGroup.Item>\n             <ListGroup.Item>\n               Requests for data should be able to demonstrate at least:\n                 1) Legitimate purpose/interest/Use.\n                 2) Authorized accessibility to specific individuals.\n                 3) Reasonable and specific time period of data access.\n                 4) Destruction of data after use.\n             </ListGroup.Item>\n             <ListGroup.Item>\n               Organizations shall schedule internal and external security\n               processes independently audited. Organizations should record and audit\n               log of all security-related events. Where possible, audits and their documentations\n               should be automated. Audit logs should be retained for at least a year\n               or as specified by law.\n             </ListGroup.Item>\n             <ListGroup.Item>\n               Organizations shall schedule internal and external security processes\n               independently audited. orhanizations should also record and audit log of\n               all security-related events. Where possible, audits and their documentation shoudl\n               be automated. Audit logs should be retained for at least a year or as\n               specified by law.\n             </ListGroup.Item>\n             <ListGroup.Item>\n               Audits/Assessments should also assess data integrity and quality.\n               Specifically, if data processing involves a vulnerable population.\n               If practical, the organization should consider a vulnerable population-\n               specific privacy impact assessment.\n             </ListGroup.Item>\n           </ListGroup>\n          </Card.Text>\n         </Tab>\n      </Tabs >);\n    }\n\n    getLaws = () => {\n      const {locations} = this.props;\n      return(<Card>\n        <Card.Header as=\"h5\">Laws and Policies </Card.Header>\n        <Card.Body>\n         { (locations.include('Canada')) ? this.getCanadiandLaws() : null }\n        </Card.Body>\n        <Card.Body>\n         { (locations.include('Europe')) ? 'Please refer to the Obligations and Requirements of the GDPR' : null }\n        </Card.Body>\n        <Card.Body>\n         { (locations.include('United States')) ? 'Please refer to the US Legislation (HIPAA)' : null }\n        </Card.Body>\n      </Card>);\n    }\n\n    render(){\n        const {locations, isPersonalInfo} = this.props;\n        const styles = StyleSheet.create({\n          page: {\n            flexDirection: 'row',\n            backgroundColor: '#E4E4E4'\n          },\n          section: {\n            margin: 10,\n            padding: 10,\n            flexGrow: 1\n          }\n        });\n        const MyDoc = () => this.createDocument();\n        return(\n        <Container>\n          <div>\n            <Jumbotron>\n              <h1> Obligations and requirements </h1>\n                {locations.map(( item ) => {\n                    return (\n                      <div style={{paddingTop: '1%'}}>\n                        <h6> {item} </h6>\n                      </div>\n                    );\n                  })}\n                <p>\n                <p> { this.getBestPractices() } </p>\n                <p> { isPersonalInfo ? this.getLaws() : null } </p>\n                    <Link to=\"/\">\n                      <Button variant=\"danger\"> Restart  </Button>\n                    </Link>\n                    <div style={{paddingTop: '1%'}}>\n                     <PDFDownloadLink document={<MyDoc />} fileName=\"ObligationsAndRequirements.pdf\">\n                      <Button variant=\"info\"> Download PDF  </Button>\n                     </PDFDownloadLink>\n                   </div>\n                </p>\n            </Jumbotron>\n          </div>\n        </Container>)\n    }\n}\n\nexport default Info;\n"]},"metadata":{},"sourceType":"module"}