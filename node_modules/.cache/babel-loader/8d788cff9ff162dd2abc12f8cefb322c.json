{"ast":null,"code":"var _jsxFileName = \"/Users/sballesteros/Documents/D-path/src/Info.js\";\nimport React, { Component } from 'react';\nimport { Container, Jumbotron, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { PDFDownloadLink, Document, Page, View, Text, StyleSheet, Image, Font } from '@react-pdf/renderer';\nimport { styles } from './utils/PDFStyles';\n\nclass Info extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveInformation = (e, value) => {\n      e.preventDefault();\n      this.props.handleChange(value);\n    };\n\n    this.createDocument = () => {\n      const {\n        locations,\n        isPersonalInfo\n      } = this.props; // Create styles\n\n      Font.register({\n        family: 'Oswald',\n        src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf'\n      });\n      return /*#__PURE__*/React.createElement(Document, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Page, {\n        style: styles.body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        style: styles.header,\n        fixed: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, \"~ D-Path Tool ~\"), /*#__PURE__*/React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, \"OBLIGATIONS AND REQUIREMENTS\"), /*#__PURE__*/React.createElement(Text, {\n        style: styles.author,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, \"Epishare\"), isPersonalInfo ? this.getLawsPDF(locations) : null, this.getBestPracticesPDF(), /*#__PURE__*/React.createElement(Text, {\n        style: styles.pageNumber,\n        render: ({\n          pageNumber,\n          totalPages\n        }) => `${pageNumber} / ${totalPages}`,\n        fixed: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      })));\n    };\n  }\n\n  render() {\n    const {\n      locations,\n      isPersonalInfo\n    } = this.props;\n    const styles = StyleSheet.create({\n      page: {\n        flexDirection: 'row',\n        backgroundColor: '#E4E4E4'\n      },\n      section: {\n        margin: 10,\n        padding: 10,\n        flexGrow: 1\n      }\n    });\n\n    const MyDoc = () => this.createDocument();\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, \" Obligations and requirements \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \" \", isPersonalInfo ? this.getLaws() : null, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \" \", this.getBestPractices(), \" \"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }\n    }, \" Restart  \")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PDFDownloadLink, {\n      document: /*#__PURE__*/React.createElement(MyDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 49\n        }\n      }),\n      fileName: \"ObligationsAndRequirements.pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }\n    }, \" Download PDF  \"))))));\n  }\n\n}\n\nexport default Info;","map":{"version":3,"sources":["/Users/sballesteros/Documents/D-path/src/Info.js"],"names":["React","Component","Container","Jumbotron","Button","Link","PDFDownloadLink","Document","Page","View","Text","StyleSheet","Image","Font","styles","Info","constructor","props","saveInformation","e","value","preventDefault","handleChange","createDocument","locations","isPersonalInfo","register","family","src","body","header","title","author","getLawsPDF","getBestPracticesPDF","pageNumber","totalPages","render","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","MyDoc","getLaws","getBestPractices","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Container, Jumbotron, Button} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport { PDFDownloadLink, Document, Page, View, Text, StyleSheet, Image, Font} from '@react-pdf/renderer'\nimport {styles} from './utils/PDFStyles';\n\nclass Info extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    saveInformation = (e, value) => {\n        e.preventDefault();\n        this.props.handleChange(value);\n    }\n\n    createDocument = () => {\n      const {locations, isPersonalInfo} = this.props;\n\n      // Create styles\n      Font.register({\n        family: 'Oswald',\n        src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf'\n      });\n\n      return (\n        <Document>\n        <Page style={styles.body}>\n          <Text style={styles.header} fixed>\n            ~ D-Path Tool ~\n          </Text>\n          <Text style={styles.title}>OBLIGATIONS AND REQUIREMENTS</Text>\n          <Text style={styles.author}>Epishare</Text>\n            { (isPersonalInfo) ? this.getLawsPDF(locations) : null }\n            { this.getBestPracticesPDF() }\n          <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n            `${pageNumber} / ${totalPages}`\n          )} fixed />\n        </Page>\n        </Document>)\n    }\n\n    render(){\n        const {locations, isPersonalInfo} = this.props;\n        const styles = StyleSheet.create({\n          page: {\n            flexDirection: 'row',\n            backgroundColor: '#E4E4E4'\n          },\n          section: {\n            margin: 10,\n            padding: 10,\n            flexGrow: 1\n          }\n        });\n        const MyDoc = () => this.createDocument();\n        return(\n        <Container>\n          <div>\n            <Jumbotron>\n              <h1> Obligations and requirements </h1>\n                <p> { isPersonalInfo ? this.getLaws() : null } </p>\n                <p> { this.getBestPractices() } </p>\n                    <Link to=\"/\">\n                      <Button variant=\"danger\"> Restart  </Button>\n                    </Link>\n                    <div style={{paddingTop: '1%'}}>\n                     <PDFDownloadLink document={<MyDoc />} fileName=\"ObligationsAndRequirements.pdf\">\n                      <Button variant=\"info\"> Download PDF  </Button>\n                     </PDFDownloadLink>\n                   </div>\n            </Jumbotron>\n          </div>\n        </Container>)\n    }\n}\n\nexport default Info;\n"]},"metadata":{},"sourceType":"module"}